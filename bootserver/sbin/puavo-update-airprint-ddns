#!/usr/bin/ruby 
#
# Copyright 2013 Opinsys Oy
#
# Helper script to update DNS entries needed by AirPrint to print to CUPS
# printers.

require 'puavo'
require 'rest-client'
require 'yaml'
require 'dnsruby'

if File.exists?("/etc/dhcp/ddns-keys/nsupdate.key")
  tmp = File.read("/etc/dhcp/ddns-keys/nsupdate.key")
  if /key "(.*?)"/.match(tmp)
    nsupdate_key_name = $1
  end

  if /secret "(.*?)"/.match(tmp)
    nsupdate_key = $1
  end
end

dns_server_host = "127.0.0.1"
dns_server_port = 553

# Get printer queues from the puavo-rest (bootserver)
printer_queues = RestClient.get "#{ PUAVO_ETC.domain }/v3/boot_server/#{ PUAVO_ETC.hostname }/wireless_printer_queues"

# FIXME: set tsig by initialize
dns_server = Dnsruby::Resolver.new({ :nameserver => dns_server_host,
                                     :port => dns_server_port })
dns_server.tsig = [nsupdate_key_name, nsupdate_key]

# Get current value of _universal._sub._ipp._tcp.<domain of organisation>"
current_ipp_records = dns_server.query( "_universal._sub._ipp._tcp.#{ PUAVO_ETC.domain }",
                                        Dnsruby::Types.PTR )

current_ipp_record_strings = current_ipp_records.answer.map do |r|
  r.rdata_to_string
end

new_ipp_records = Dnsruby::Update.new(PUAVO_ETC.domain)
printer_queues.each do |printer_queue|
  new_ipp_records.add("_universal._sub._ipp._tcp.#{ PUAVO_ETC.domain }", 'PTR', 60, "#{ printer_queue['name'] }._ipp._tcp.#{ PUAVO_ETC.domain }.")
end

new_ipp_record_strings = []
new_ipp_records.each_update do |r|
  new_ipp_record_strings.push r.rdata_to_string
end

if current_ipp_record_strings.sort != new_ipp_record_strings.sort
  ipp_delete_records = Dnsruby::Update.new(PUAVO_ETC.domain)
  ipp_delete_records.delete("_universal._sub._ipp._tcp.#{ PUAVO_ETC.domain }")

  begin
    # Update dns server
    dns_server.send_message(ipp_delete_records)
    dns_server.send_message(new_ipp_records)
  rescue Exception => e
    puts "DNS server (#{ dns_server_host }) update failed (new universal ipp records): #{e.inspect}"
  end
end
