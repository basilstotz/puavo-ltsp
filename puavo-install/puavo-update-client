#!/bin/sh

set -e

on_persistent_overlay() {
    grep -q "puavo.image.overlay=" /proc/cmdline
}

usage_error() {
    echo "error: $1" >&2
    echo "Try '$0 --help' for more information." >&2
    exit 1
}

hosttype=$(cat /etc/puavo/hosttype)

if [ "$hosttype" != "laptop" -a \
     "$hosttype" != "wirelessaccesspoint" ]; then
    echo 'This script should be run only for laptops' \
         'and wirelessaccesspoints!' >&2
    exit 1
fi

force_image_update=false
no_image_update=false
use_rate_limit=false

while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            shift
            echo "Usage: $0"
            echo
            echo "Update device configuration and images."
            echo
            echo "Options:"
            echo "    --force-image-update   update image, no matter what"
            echo "                           (overrides --no-image-update)"
            echo "    --no-image-update      do not update images, only configurations"
            echo "    --use-rate-limit       limit the image download rate"
            echo "    -h, --help             print help and exit"
            echo
            exit 0
            ;;
        --force-image-update)
            shift
            force_image_update=true
            ;;
        --no-image-update)
            shift
            no_image_update=true
            ;;
        --use-rate-limit)
            shift
            use_rate_limit=true
            ;;
        --)
            shift
            break
            ;;
        -*)
            usage_error "invalid argument '$1'"
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -ne 0 ]; then
    usage_error "invalid number of arguments ($#), expected 0"
fi

set -u

if $force_image_update; then
    do_image_update=true
elif $no_image_update; then
    do_image_update=false
elif on_persistent_overlay; then
    # we are on persistent overlay (development mode),
    # do not do an image update
    do_image_update=false
else
    personally_administered=$(jq .personally_administered \
                                 /etc/puavo/device.json)
    if [ "$personally_administered" != "true" ]; then
        automatic_image_updates=$(jq .automatic_image_updates \
                                     /etc/puavo/device.json)
    else
        automatic_image_updates=$(jq .automatic_image_updates \
                                     /state/etc/puavo/local/config.json \
                                   2>/dev/null) || true
    fi

    if [ "$automatic_image_updates" = "false" ]; then
        do_image_update=false
    else
        do_image_update=true
    fi
fi

dbus_cmd="
  dbus-send --dest=org.puavo.client.Daemon
            --print-reply=literal
            --reply-timeout=30000
            --system
            /updater
"

if ! $do_image_update; then
    # do only the configuration update
    if $dbus_cmd org.puavo.client.update.UpdateConfiguration >/dev/null; then
        echo 'Configuration update started.'
    else
        echo 'Starting configuration update failed.' >&2
        exit 1
    fi
else
    # do the whole update (configuration update + image update)
    if $dbus_cmd org.puavo.client.update.Update \
                 "boolean:${use_rate_limit}" >/dev/null; then
        echo 'System update started.'
    else
        echo 'Starting system update failed.' >&2
        exit 1
    fi
fi
