#!/bin/sh

set -eu

ask_preseed() {
  preseeds=$(ls -1 /usr/share/puavo-ltsp-install/preseeds | sort)
  preseed_count=$(echo "${preseeds}" | wc -l)

  # Ask the preferred preseed if there are some available.
  [ -n "${preseeds}" ] && while true; do
    echo "Installer preseeds:"
    # Print the list of preseeds.
    echo "0\tNO PRESEEDING"
    echo "${preseeds}" | awk '{printf "%d\t%s\n", NR, $0}'

    # The default preseed is the first item, number 0.
    read -p "Select preseed number [0]: " preseed_nr
    [ -n "${preseed_nr}" ] || preseed_nr=0

    # Ensure the value is a valid integer.
    case "${preseed_nr}" in
      ''|*[!0-9]*)
        echo "E: invalid preseed number" >&2
        continue
        ;;
      *)
        ;;
    esac

    # Ensure the integer has a valid value.
    if [ 0 -gt "${preseed_nr}" \
           -o "${preseed_nr}" -gt "${preseed_count}" ]; then
      echo "E: invalid preseed number" >&2
      continue
    fi

    # Preseed 0 always means no preseeding at all.
    [ "${preseed_nr}" -eq 0 ] && break

    # Apply preseeds and continue installation.
    preseed=$(echo "${preseeds}" | sed -n "${preseed_nr}p")
    puavo_preseed_register_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_preseed_register_args")
    puavo_preseed_setup_filesystems_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_preseed_setup_filesystems_args")

    gen_puavo_preseed_register_args="/usr/share/puavo-ltsp-install/preseeds/${preseed}/gen_puavo_preseed_register_args"
    if [ -x "${gen_puavo_preseed_register_args}" ]; then
      puavo_register_extra_args=$("${gen_puavo_preseed_register_args}")
      puavo_preseed_register_args="${puavo_preseed_register_args} ${puavo_register_extra_args}"
    fi

    gen_puavo_preseed_setup_filesystems_args="/usr/share/puavo-ltsp-install/preseeds/${preseed}/gen_puavo_preseed_setup_filesystems_args"
    if [ -x "${gen_puavo_preseed_setup_filesystems_args}" ]; then
      puavo_setup_filesystems_extra_args=$("${gen_puavo_preseed_setup_filesystems_args}")
      puavo_preseed_setup_filesystems_args="${puavo_preseed_setup_filesystems_args} ${puavo_setup_filesystems_extra_args}"
    fi

    break
  done
}

do_umounts() {
  puavo_install_hosttype=$1
  puavo_hosttype=$2

  if [ "$puavo_install_hosttype" = 'preinstalled' ]; then
    # On preinstalled hosts /images should be mounted at boot and /state
    # should have been mounted by this script.  Those are all we should need.
    umount /images /state
    return 0
  fi

  case "$puavo_hosttype" in
    laptop)              umount /state /images /imageoverlays /tmp /home ;;
    ltspserver)          umount /state                                   ;;
    wirelessaccesspoint) umount /state /images /imageoverlays /tmp       ;;
  esac
}

get_accepted_hosttypes() {
  puavo_install_hosttype=$1

  if [ "$puavo_install_hosttype" = 'preinstalled' ]; then
    get_preinstalled_hosttype
    return 0
  fi

  echo 'fatclient,laptop,ltspserver,thinclient,wirelessaccesspoint'
}

get_install_hosttype() {
  mkdir -p /run/puavo
  if [ ! -e /run/puavo/install_hosttype ]; then
    cp /etc/puavo/hosttype /run/puavo/install_hosttype
  fi

  puavo_install_hosttype="$(cat /run/puavo/install_hosttype)"

  case "$puavo_install_hosttype" in
    diskinstaller|preinstalled|unregistered)
      echo "$puavo_install_hosttype"
      ;;
    *)
      echo "'${puavo_install_hosttype}' is not a supported hosttype for" \
	   "installation" >&2
      return 1
      ;;
  esac
}

get_preinstalled_hosttype() {
  preinstalled_hosttype=$(cat /images/puavo_preinstalled 2>/dev/null || true)
  case "$preinstalled_hosttype" in
    laptop|wirelessaccesspoint)
      echo "$preinstalled_hosttype"
      ;;
    *)
      echo 'Host is preinstalled, but does not have a supported hosttype' >&2
      return 1
      ;;
  esac
}

install_grub() {
  echo -n 'Doing grub installation: '
  puavo-install-grub
  sync
}

install_image() {
  puavo_install_hosttype=$1

  ltspimage_name=$(cat /etc/ltsp/this_ltspimage_name 2>/dev/null || true)
  if [ -z "$ltspimage_name" ]; then
    echo 'Could not determine the current ltsp image' >&2
    return 1
  fi

  case "$puavo_install_hosttype" in
    diskinstaller)
      puavo-install-and-update-ltspimages                      \
        --install-from-file "/installimages/${ltspimage_name}" \
        "$ltspimage_name"
      ;;
    unregistered)
      puavo-install-and-update-ltspimages --install-from-nbd /dev/nbd0 \
                                          "$ltspimage_name"
      ;;
    *)
      echo 'I do not know from where to install an ltsp image' >&2
      return 1
      ;;
  esac

  sync
}

install_localbootdevice() {
  puavo_install_hosttype=$1
  puavo_hosttype=$2
  puavo_preseed_setup_filesystems_args=$3

  if ! is_preinstalled "$puavo_install_hosttype"; then
    puavo-setup-filesystems ${puavo_preseed_setup_filesystems_args}
  fi

  setup_state_contents

  if ! is_preinstalled "$puavo_install_hosttype"; then
    # Grub needs to be installed before images, because grub
    # configuration is updated during image installation by
    # puavo-image-preinst.
    install_grub
    install_image "$puavo_install_hosttype"
  fi

  update_configuration

  # If host was preinstalled, grub will boot the host as 'preinstalled' until
  # we do this:
  if is_preinstalled "$puavo_install_hosttype"; then
    puavo-install-grub --hosttype "$puavo_hosttype" --only-update-config
  fi

  # From now on the host will boot as a fully installed host.

  if is_preinstalled "$puavo_install_hosttype"; then
    rm -f /images/puavo_preinstalled
  fi

  do_umounts "$puavo_install_hosttype" "$puavo_hosttype"
}

install_ltspserver() {
  puavo_install_hosttype=$1
  puavo_hosttype=$2
  puavo_preseed_setup_filesystems_args=$3

  puavo-setup-filesystems ${puavo_preseed_setup_filesystems_args}
  setup_state
  do_umounts "$puavo_install_hosttype" "$puavo_hosttype"
}

is_preinstalled() { [ "$1" = 'preinstalled' ]; }

register_and_get_hosttype() {
  puavo_install_hosttype=$1
  accepted_hosttypes=$2
  puavo_preseed_register_args=$3

  if is_preinstalled "$puavo_install_hosttype"; then
    get_preinstalled_hosttype
    return 0
  fi

  puavo-register --accepted-devicetypes "$accepted_hosttypes" \
                 ${puavo_preseed_register_args}

  cat /etc/puavo/hosttype
}

setup_state() {
  mkdir -p /state/etc
  mount /dev/mapper/puavo-state /state
  cp -aT /etc/puavo /state/etc/puavo
  sync
}

update_configuration() {
  echo "Updating configuration..."
  if /usr/lib/puavo-ltsp-install/update-configuration; then
    echo "  ... configuration updated."
    if /usr/lib/puavo-ltsp-install/update-images false false; then
      echo "  ... image updated."
    else
      echo "  ... image update failed (may update it later)."
    fi
  else
    echo "  ... a problem occurred (updating configuration later)."
  fi

  install_grub

  sync
}


# main

puavo_install_hosttype=$(get_install_hosttype)
accepted_hosttypes=$(get_accepted_hosttypes "$puavo_install_hosttype")

# ask_preseed fills in $puavo_preseed_register_args and
# $puavo_preseed_setup_filesystems_args
puavo_preseed_register_args=
puavo_preseed_setup_filesystems_args=
ask_preseed

puavo_hosttype=$(register_and_get_hosttype "$puavo_install_hosttype"       \
                                           "$accepted_hosttypes"           \
                                           "$puavo_preseed_register_args")


case "$puavo_hosttype" in
  laptop|wirelessaccesspoint)
    install_localbootdevice "$puavo_install_hosttype"               \
                            "$puavo_hosttype"                       \
                            "$puavo_preseed_setup_filesystems_args"
    ;;
  ltspserver)
    install_ltspserver "$puavo_install_hosttype"               \
                       "$puavo_hosttype"                       \
                       "$puavo_preseed_setup_filesystems_args"
    ;;
esac
