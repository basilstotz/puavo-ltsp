#!/bin/sh

set -eu

puavo_register_args=
puavo_setup_filesystems_args=

preseeds=$(ls -1 /usr/share/puavo-ltsp-install/preseeds | sort)
preseed_count=$(echo "${preseeds}" | wc -l)

# Ask the preferred preseed if there are some available.
[ -n "${preseeds}" ] && while true; do
    echo "Installer preseeds:"
    # Print the list of preseeds.
    echo "0\tNO PRESEEDING"
    echo "${preseeds}" | awk '{printf "%d\t%s\n", NR, $0}'

    # The default preseed is the first item, number 0.
    read -p "Select preseed number [0]: " preseed_nr
    [ -n "${preseed_nr}" ] || preseed_nr=0

    # Ensure the value is a valid integer.
    case "${preseed_nr}" in
        ''|*[!0-9]*)
            echo "E: invalid preseed number" >&2
            continue
            ;;
        *)
            ;;
    esac

    # Ensure the integer has a valid value.
    if [ 0 -gt "${preseed_nr}" -o "${preseed_nr}" -gt "${preseed_count}" ]; then
        echo "E: invalid preseed number" >&2
        continue
    fi

    # Preseed 0 always means no preseeding at all.
    [ "${preseed_nr}" -eq 0 ] && break

    # Apply preseeds and continue installation.
    preseed=$(echo "${preseeds}" | sed -n "${preseed_nr}p")
    puavo_register_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_register_args")
    puavo_setup_filesystems_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_setup_filesystems_args")

    gen_puavo_register_args="/usr/share/puavo-ltsp-install/preseeds/${preseed}/gen_puavo_register_args"
    if [ -x "${gen_puavo_register_args}" ]; then
        puavo_register_extra_args=$("${gen_puavo_register_args}")
        puavo_register_args="${puavo_register_args} ${puavo_register_extra_args}"
    fi

    gen_puavo_setup_filesystems_args="/usr/share/puavo-ltsp-install/preseeds/${preseed}/gen_puavo_setup_filesystems_args"
    if [ -x "${gen_puavo_setup_filesystems_args}" ]; then
        puavo_setup_filesystems_extra_args=$("${gen_puavo_setup_filesystems_args}")
        puavo_setup_filesystems_args="${puavo_setup_filesystems_args} ${puavo_setup_filesystems_extra_args}"
    fi

    break
done

mkdir -p /run/puavo
if [ ! -e /run/puavo/install_hosttype ]; then
  cp /etc/puavo/hosttype /run/puavo/install_hosttype
fi

# This might be "unregistered" or "diskinstaller" (which is unregistered in a
# different way), so we read this now and use later.
puavo_install_hosttype="$(cat /run/puavo/install_hosttype)"

if ! [    "$puavo_install_hosttype" = 'diskinstaller' \
       -o "$puavo_install_hosttype" = 'preinstalled'  \
       -o "$puavo_install_hosttype" = 'unregistered' ]; then
  echo "'$puavo_install_hosttype' is not a supported hosttype for" \
       " installation" >&2
  exit 1
fi

accepted_devicetypes='fatclient,laptop,ltspserver,thinclient,wirelessaccesspoint'

if [ "$puavo_install_hosttype" = 'preinstalled' ]; then
  preinstalled_hosttype=$(cat /images/puavo_preinstalled 2>/dev/null || true)
  if [ -z "$preinstalled_hosttype" ]; then
    echo 'Hosttype is preinstalled, but could not determine its type' >&2
    exit 1
  fi
  accepted_devicetypes=$preinstalled_hosttype
fi

puavo-register --accepted-devicetypes "$accepted_devicetypes" \
               ${puavo_register_args}

hosttype="$(cat /etc/puavo/hosttype)"

case "$hosttype" in
  laptop|wirelessaccesspoint)
    if [ "$puavo_install_hosttype" != 'preinstalled' ]; then
      puavo-setup-filesystems ${puavo_setup_filesystems_args}
    else
      mkdir -p /state
      mount /dev/mapper/puavo-state /state
    fi

    mkdir -p /state/etc
    cp -aT /etc/puavo /state/etc/puavo

    if [ "$puavo_install_hosttype" != 'preinstalled' ]; then
      # Grub needs to be installed before images, because grub
      # configuration is updated during image installation by
      # puavo-image-preinst.
      echo -n "Doing grub installation: "
      puavo-install-grub
      sync

      # install from nbd, the ltsp image must contain its name in this path
      ltspimage_name=$(cat /etc/ltsp/this_ltspimage_name)

      case "$puavo_install_hosttype" in
	diskinstaller)
	  puavo-install-and-update-ltspimages                      \
	    --install-from-file "/installimages/${ltspimage_name}" \
	    "$ltspimage_name"
	  ;;
	*)
	  puavo-install-and-update-ltspimages --install-from-nbd /dev/nbd0 \
					      "$ltspimage_name"
	  ;;
      esac
      sync
    fi

    echo "Updating $hosttype configuration..."
    if /usr/lib/puavo-ltsp-install/update-configuration; then
      echo "  ... $hosttype configuration updated."
      if /usr/lib/puavo-ltsp-install/update-images false false; then
        echo "  ... image updated."
      fi
    else
      echo "  ... a problem occurred (updating configuration later)."
    fi
    sync

    if [ "$puavo_install_hosttype" = 'preinstalled' ]; then
      # The grub configuration must include the new hosttype and not
      # "preinstalled".  From now on the host will boot as a fully installed
      # host.
      puavo-install-grub --only-update-config
      rm -f /images/puavo_preinstalled
    fi

    if [ "$puavo_install_hosttype" != 'preinstalled' ]; then
      case "$hosttype" in
        laptop)              umount /state /images /imageoverlays /tmp /home ;;
        wirelessaccesspoint) umount /state /images /imageoverlays /tmp       ;;
      esac
    else
      umount /state /images
    fi

    echo "Press ENTER to reboot"
    read answer
    ;;
  ltspserver)
    puavo-setup-filesystems ${puavo_setup_filesystems_args}
    mkdir -p /state/etc
    cp -a /etc/puavo /state/etc

    sync
    umount /state
    ;;
esac
