#!/bin/sh

set -e

# Load lts.conf variables
. /usr/share/ltsp/ltsp_config

is_nfs_mounted() {
  mntpoint=$1
  mount | awk -v "mntpoint=$mntpoint" '
	    BEGIN { status = 1 }
	    $3 == mntpoint && $5 == "nfs4" { status = 0 }
	    END { exit(status) }
          '
}

if boolean_is_true "${USE_NFS_HOMES}" ; then
  if [ "${PAM_TYPE}" = "open_session" ]; then
    # rpc.gssd needs a user principal on netboot devices as they do not have
    # machine principals.
    #
    # Install kerberos ticket to root only if root does not have a ticket
    # already.  This works around a problem, when root ticket switches
    # to another (gssd/nfs stuff does not like that (client id changes)
    # and login failures occur).
    #
    # Current kernels seem to cause problems in diskless environments when
    # SETCLIENTID or EXCHANGE_ID calls are done with GSS authentication. As
    # a temporary fix, first do a sec=sys mount of / without a kerberos
    # principal to force SETCLIENTID to be called with auth=sys.
    #
    # /home mount is done with a kerberos principal
    if ! is_nfs_mounted /home; then
      mkdir -p /mntroot

      # If /etc/krb5.keytab exists, we want to do the /home mount with the
      # machine credentials

      if [ -e /etc/krb5.keytab ]; then
        mv /etc/krb5.keytab /etc/krb5.keytab.bu
        rm -f /tmp/krb5cc_0

        mount -t nfs4 -o sec=sys ${NFS_SERVER}:/ /mntroot

        mv /etc/krb5.keytab.bu /etc/krb5.keytab

        mount -t nfs4 -o sec=krb5,nodev,nosuid,minorversion=0,nolock ${NFS_SERVER}:/home /home
        umount /mntroot
      else
        rm -f /tmp/krb5cc_0

        TMP_KRB5CCNAME=$(echo $KRB5CCNAME | sed -e 's/^FILE://')

        mount -t nfs4 -o sec=sys ${NFS_SERVER}:/ /mntroot

        install -o root -g root -m 600 "$TMP_KRB5CCNAME" /tmp/krb5cc_0

        mount -t nfs4 -o sec=krb5,nodev,nosuid,minorversion=0 ${NFS_SERVER}:/home /home
        umount /mntroot
      fi
    fi

    # Request a remote directory for the user (three second timeout, may fail)
    { echo "$PAM_USER" | nc -w 3 "$SERVER" 907; } || true
  fi
fi

exit 0
