# Mount Puavo partitions from local hard drive and use files created by
# puavo-register script.  Used by Puavo LTSP servers to get registration
# information needed for sssd and kerberos principal for NFS mounts.
# Images partition are used by laptops and need it mounted to update
# the ltsp images.
#
# Checks if LVM partitions /dev/mapper/puavo-home, /dev/mapper/puavo-images,
# /dev/mapper/puavo-state and /dev/mapper/puavo-tmp and mounts those as 
# /home, /images, /state or /tmp correspondingly.  Also copy necessary 
# directory hierarchies under /state in case those are missing.

puavo_enable_utmp() {
  local oldumask
  mkdir -p /state/var/log

  oldumask=$(umask)
  umask 0007
  for log in btmp wtmp lastlog; do
    touch "/state/var/log/$log"
    chgrp utmp "/state/var/log/$log"
  done
  umask "$oldumask"

  chmod o+r /state/var/log/wtmp
  chmod o+r /state/var/log/lastlog
}

# CUPS always writes its configuration files as new files and then
# renames the new file to the old name. This breaks the /state linking
# if we just link /etc/cups/printers.conf to /state. To overcome
# this we always copy cups files from the image to the /state partition
# when booting. Locally configured printers should stay configured
# this way and PPDs are placed under /state/etc/cups/ppd.
puavo_setup_cups_dir() {
  find "/etc/cups/" -type d -print0 | cpio -0dpm --quiet /state 

  cp -a -t /state/etc/cups/ \
     /etc/cups/cupsd.conf \
     /etc/cups/cups-files.conf \
     /etc/cups/raw.convs \
     /etc/cups/raw.types \
     /etc/cups/snmp.conf 

  mv -T "/etc/cups" "/etc/cups.rofs" 2>/dev/null || true
  ln -fns "/state/etc/cups" "/etc/cups"
}

puavo_link_to_state() {
  for dir in "$@"; do
    # Before linking the directory, make sure that the /state partition has
    # the same directory structure as the image so that applications do 
    # not freak out because something was be missing. The original directory
    # is renamed to $dir.rofs before replacing the directory with a 
    # symbolic link to the /state partition.
    find "$dir" -type d -print0 | cpio -0dpm --quiet /state
    mv -T "$dir" "$dir.rofs" 2>/dev/null || true
    ln -fns "/state$dir" "$dir"
  done
}

puavo_mount_partition() {
  name=$1
  if [ -b "/dev/mapper/puavo-$name" ]; then
    mkdir -p /$name

    OPTIONS="-o noatime"

    if [ -f "/sys/block/sda/queue/rotational" ]; then
      if grep -q "0" /sys/block/sda/queue/rotational; then
        OPTIONS="-o discard,noatime"
      fi
    fi

    mount $OPTIONS /dev/mapper/puavo-$name /$name
  fi
}

if [ -x "/sbin/vgchange" ]; then
  vgchange -a y puavo

  case "$PUAVO_HOSTTYPE" in
    fatclient)
      if [ -b "/dev/mapper/puavo-tmp" ]; then
        puavo_mount_partition tmp
        chmod 1777 /tmp
      fi
      ;;
    laptop)
      puavo_mount_partition home
      puavo_mount_partition images
      ;;
    wirelessaccesspoint)
      puavo_mount_partition images
      ;;
  esac

  case "$PUAVO_HOSTTYPE" in
    laptop|ltspserver|wirelessaccesspoint)
      if [ -b "/dev/mapper/puavo-state" ]; then
	puavo_mount_partition state

	# must fix in case puavo gid has changed...
	chgrp puavo /state/etc/puavo/ldap/password

	for path in /etc/krb5.keytab /etc/lts.conf /etc/puavo; do
	  cp -aT "/state${path}" "$path" 2>/dev/null || true
	done

	case "$PUAVO_HOSTTYPE" in
	  laptop)
	    puavo_link_to_state /etc/NetworkManager/system-connections \
				/var/lib/extrausers \
				/var/lib/puavo-desktop \
				/var/lib/sss \
				/var/log
	    puavo_enable_utmp
	    puavo_setup_cups_dir
	    ;;
	  ltspserver|wirelessaccesspoint)
	    puavo_link_to_state /var/log
	    puavo_enable_utmp
	    ;;
	esac
      fi

      if [ -b "/dev/mapper/puavo-tmp" ]; then
        puavo_mount_partition tmp
        chmod 1777 /tmp
      fi
      ;;
  esac
fi
