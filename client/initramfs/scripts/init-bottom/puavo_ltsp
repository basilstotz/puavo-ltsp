#!/bin/sh

MINKVER="2.6.17"
PREREQ=""

# Output pre-requisites
prereqs()
{
    echo "$PREREQ"
}

case "$1" in
    prereqs)
        prereqs
    exit 0
    ;;
esac

PUAVO_IMAGE=
PUAVO_IMAGE_OVERLAY=
PUAVO_HOSTTYPE=

# We support one method to call the init-puavo.d scripts.
# Pass "init=/sbin/init-puavo", which will execute the scripts
# in the real system and chain to /sbin/init after that.

for x in $(cat /proc/cmdline); do
    case "$x" in
        init=/sbin/init-puavo)
            LTSP_BOOT=true
            PUAVO_LTSP_BOOT=true
            ;;
        puavo.image.overlay=*)
            PUAVO_IMAGE_OVERLAY="${x#puavo.image.overlay=}"
            ;;
        loop=*)
            PUAVO_IMAGE=$(basename "${x#loop=}")
            ;;
        puavo.hosttype=*)
            PUAVO_HOSTTYPE="${x#puavo.hosttype=}"
            ;;
    esac
done

test -n "$LTSP_BOOT" || exit

[ -z "${rootmnt}" ] && panic "rootmnt unknown in init-bottom"
[ -d "${rootmnt}/proc" ] || panic "rootmnt not mounted in init-bottom"

do_union_mount()
{
    cow=$1

    mkdir -p /rofs
    mount -o move "${rootmnt}" /rofs

    if modprobe overlayfs; then
        UNION_TYPE=overlayfs
        UNION_OPTS="upperdir=${cow},lowerdir=/rofs"
    elif modprobe aufs; then
        UNION_TYPE=aufs
        UNION_OPTS="dirs=${cow}=rw:/rofs=ro"
    else
        panic "Could not load neither overlayfs nor aufs."
    fi
    mount -t "${UNION_TYPE}" -o "${UNION_OPTS}" "${UNION_TYPE}" "${rootmnt}"

    mkdir -p "${rootmnt}/rofs"
    mount -o move /rofs "${rootmnt}/rofs"
}

do_union_mount_temporary()
{
    mkdir -p /cow
    mount -t tmpfs -o mode=0755 tmpfs /cow

    do_union_mount /cow

    mkdir -p "${rootmnt}/cow"
    mount -o move /cow "${rootmnt}/cow"
}

do_union_mount_persistent()
{
    cow="/imageoverlays/${PUAVO_IMAGE}/${PUAVO_IMAGE_OVERLAY}"
    mkdir -p "${cow}"

    do_union_mount "${cow}"
}

mount_puavo_partition() {
  name=$1
  if [ -b "/dev/mapper/puavo-${name}" ]; then
    mkdir -p "/${name}"

    OPTIONS="-o noatime"

    if [ -f "/sys/block/sda/queue/rotational" ]; then
      if grep -q "0" /sys/block/sda/queue/rotational; then
        OPTIONS="-o discard,noatime"
      fi
    fi

    mount ${OPTIONS} "/dev/mapper/puavo-${name}" "/${name}"
  fi
}

move_puavo_partition()
{
    name=$1

    mkdir -p "${rootmnt}/${name}"
    mount -o move "/${name}" "${rootmnt}/${name}"
}

# mount writeable filesystems if / is not already mounted writeable.
if ! chroot "${rootmnt}" /usr/bin/test -w "/" ; then
    case "${PUAVO_HOSTTYPE}" in
        laptop|wirelessaccesspoint)
            mount_puavo_partition imageoverlays
            if [ -n "${PUAVO_IMAGE}" -a -n "${PUAVO_IMAGE_OVERLAY}" ]; then
                do_union_mount_persistent
            else
                do_union_mount_temporary
            fi
            move_puavo_partition imageoverlays
            ;;
        *)
            do_union_mount_temporary
            ;;
    esac
fi

# Copy networking configuration to the root file system
mkdir -p "$rootmnt/var/cache/ltsp/"
for netconf in /run/net-*.conf ; do
    if [ -f "$netconf" ]; then
        cp "$netconf" "$rootmnt/var/cache/ltsp/"
    fi
done
