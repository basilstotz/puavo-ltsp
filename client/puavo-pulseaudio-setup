#!/bin/bash
#
# ##############################################################################
#
# Copyright (C) 2014 Opinsys Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# ##############################################################################
#
# Author: Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>
#

set -eu

while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            shift
            echo "Usage: $0"
            echo
            echo "Setup PulseAudio according to the configuration defined in Puavo"
            echo
            echo "Options:"
            echo "    -h, --help                   print help and exit"
            echo
            exit 0
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -ne 0 ]; then
    usage_error "invalid number of positional arguments ($#), expected 0"
fi

sink=$(jq -r .default_audio_sink /etc/puavo/device.json)
source=$(jq -r .default_audio_source /etc/puavo/device.json)

# jq outputs null for non-existing fields, treat them as empty
# strings.
[ "${sink}" = "null" ] && sink=
[ "${source}" = "null" ] && source=

# Quirk for smartboards: if the default sink was not set in Puavo
# and if smartboard audio is connected, set it as default.
if [ -z "${sink}" ]; then
    sink=$(pacmd list-sinks \
        | sed -r -n '/^\s+index: [0-9]+$/ n; s/^\s+name: <(.*C-Media.*)>$/\1/p')
fi

# Default sink/source values provided by Puavo can be in two different
# formats:
# 1) Fields separated by | (ASCII 0x7c)
# 2) Just the sink/source name

if [ -n "${sink}" ]; then
    if grep -q '|' <<<"${sink}"; then
        IFS='|' read card profile sink <<<"${sink}"
        pacmd set-card-profile "${card}" "${profile}"
    fi
    pacmd set-default-sink "${sink}"
fi

if [ -n "${source}" ]; then
    if grep -q '|' <<<"${source}"; then
        IFS='|' read card profile source <<<"${source}"
        pacmd set-card-profile "${card}" "${profile}"
    fi
    pacmd set-default-source "${source}"
fi
