# This PAM stack is to be used with lightdm thin client logins.
#
# Only kerberos authentication is supported currently.

auth    requisite       pam_nologin.so
auth    required        pam_env.so readenv=1
auth    required        pam_env.so readenv=1 envfile=/etc/default/locale
auth    sufficient      pam_succeed_if.so user ingroup nopasswdlogin
auth    optional        pam_group.so

# allow local users in
auth    [success=ok default=4]      pam_unix.so
auth    required        pam_exec.so /usr/lib/puavo-ltsp-client/pam/make-session-dir
auth    optional        pam_gnome_keyring.so
auth    optional        pam_cap.so
auth    sufficient      pam_permit.so

# Here we do some tricks to get sssd behave nicely with shared laptops where 
# a new user is using the laptop right after it connects to the network. 
# LDAP provider in sssd 1.9.4 takes some time to realise that it can go online 
# and during that time the user has already tried to login multiple times. 
# Here we work around that by not using ldap id_provider in sssd, but use
# the sssd proxy provider with extrausers. This seems to fix the problems for
# now and also give some extra flexibility in DNS SRV record handling.

# XXX If pam_sss fails, but pam_krb5 succeeds, then wait a bit for sssd to figure
# XXX things out, and try sssd again after 20 seconds.  If that fails, try sssd
# XXX two times more, waiting 20 second before each try.
auth    [success=16 default=ignore]     pam_sss.so  use_first_pass
auth    requisite                       pam_krb5.so use_first_pass
auth    required                        pam_exec.so /usr/lib/puavo-ltsp-client/pam/make-session-dir
auth    required                        pam_exec.so /usr/lib/puavo-ltsp-client/pam/open-session
auth    required                        pam_exec.so /usr/lib/puavo-ltsp-client/pam/populate-extrausers
auth    [success=14 default=ignore]     pam_sss.so  use_first_pass
auth    required                        pam_exec.so /bin/sleep 4
auth    [success=12 default=ignore]     pam_sss.so  use_first_pass
auth    required                        pam_exec.so /bin/sleep 8
auth    [success=10 default=ignore]      pam_sss.so  use_first_pass
auth    required                        pam_exec.so /bin/sleep 16
auth    [success=8 default=ignore]      pam_sss.so  use_first_pass
auth    required                        pam_exec.so /bin/sleep 32
auth    [success=6 default=ignore]      pam_sss.so  use_first_pass
auth    required                        pam_exec.so /bin/sleep 64
auth    [success=4 default=ignore]      pam_sss.so  use_first_pass
auth    requisite                       pam_deny.so

auth    required        pam_exec.so /usr/lib/puavo-ltsp-client/pam/make-session-dir
auth    required        pam_exec.so /usr/lib/puavo-ltsp-client/pam/open-session
auth    required        pam_exec.so /usr/lib/puavo-ltsp-client/pam/populate-extrausers

auth    optional        pam_gnome_keyring.so
auth    optional        pam_cap.so
auth    sufficient      pam_permit.so

account required        pam_exec.so quiet /usr/lib/puavo-ltsp-client/pam/restrict-logins-by-local-config
account required                        pam_permit.so

session required        pam_limits.so
session required                        pam_permit.so
# The pam_umask module will set the umask according to the system default in
# /etc/login.defs and user settings, solving the problem of different
# umask settings with different shells, display managers, remote sessions etc.
# See "man pam_umask".
session optional                        pam_umask.so
session optional                        pam_sss.so
session	optional	pam_mkhomedir.so skel=/etc/skel/ umask=0077
session optional        pam_exec.so /usr/sbin/puavo-update-sharedir-mounts

session optional        pam_gnome_keyring.so auto_start
session required        pam_envfeed.so prog=/usr/lib/puavo-ltsp-client/pam/chown-session-dir
session optional	pam_systemd.so
session optional	pam_ck_connector.so nox11
